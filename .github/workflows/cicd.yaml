 name: CI/CD Workflow

 on:
   push:
     branches:
       - main
       - refactoring
   workflow_dispatch:
     inputs:
       environment:
         description: 'Environment (test or prod)'
         required: true
         default: 'test'
         type: string

 jobs:
   lint:
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v3

       - name: Set up Python
         uses: actions/setup-python@v4
         with:
           python-version: '3.12'

       - name: Install Poetry
         run: |
           curl -sSL https://install.python-poetry.org | python3 -
           echo "$HOME/.local/bin" >> $GITHUB_PATH

       - name: Install dependencies
         run: poetry install

       - name: Run pre-commit
         run: poetry run pre-commit run --all-files

   test:
     needs: lint
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v3

       - name: Set up Python
         uses: actions/setup-python@v4
         with:
           python-version: '3.12'

       - name: Install Poetry
         run: |
           curl -sSL https://install.python-poetry.org | python3 -
           echo "$HOME/.local/bin" >> $GITHUB_PATH

       - name: Install dependencies
         run: poetry install

       - name: Run tests
         run: poetry run pytest tests/
#   # run ruff
#   upload_to_s3:
#     runs-on: [rbal-test-runner, Linux]
#
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2
#
#     - name: Install AWS CLI and Boto3a
#       run: |
#         python -m pip install --upgrade pip
#         pip install awscli boto3
#
#     - name: Set AWS Credentials (Prod)
#       if: github.event.inputs.environment == 'prod'
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
#         AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_DEFAULT_REGION }}
#       run: echo "Using production AWS credentials"
#
#     - name: Set AWS Credentials (Test)
#       if: github.event.inputs.environment != 'prod'
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#       run: echo "Using test AWS credentials"
#
#     - name: Copy repository and upload to S3
#       env:
#         AWS_ACCESS_KEY_ID: ${{ github.event.inputs.environment == 'prod' && secrets.PROD_AWS_ACCESS_KEY_ID || secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ github.event.inputs.environment == 'prod' && secrets.PROD_AWS_SECRET_ACCESS_KEY || secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_DEFAULT_REGION: ${{ github.event.inputs.environment == 'prod' && secrets.PROD_AWS_DEFAULT_REGION || secrets.AWS_DEFAULT_REGION }}
#       run: |
#         S3_BUCKET="s3://rbal-test-al1-abacuspoena/ctabacus-poena-automation-files/."
#         if [ "${{ github.event.inputs.environment }}" == "prod" ]; then
#           S3_BUCKET="s3://"
#         fi
#         aws s3 cp . $S3_BUCKET --recursive
